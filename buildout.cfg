[buildout]
#index = http://pypi.bluedynamics.eu
extends =
    ldap.cfg
    http://dist.plone.org/release/4.1-latest/versions.cfg

versions = versions
parts +=
    zopeomelette
    ploneomelette
    coverage 

develop = .
unzip = true

extensions = mr.developer
sources-dir = ${buildout:directory}/devsrc
always-checkout = true
auto-checkout = *

[sources]
node                 = git git@github.com:bluedynamics/node
node.ext.ldap        = git git@github.com:bluedynamics/node.ext.ldap
node.ext.ugm         = git git@github.com:bluedynamics/node.ext.ugm

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = off
deprecation-warnings = on
blob-storage = var/blobstorage

eggs =
    ${python-ldap:egg}
    pas.plugins.ldap
    
zcml =
    pas.plugins.ldap

[plone]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8081
debug-mode = on
verbose-security = off
deprecation-warnings = on
blob-storage = var/blobstorage

eggs =
    ${python-ldap:egg}
    Pillow
    pas.plugins.ldap[plone]

zcml =
    pas.plugins.ldap

[test]
recipe = zc.recipe.testrunner
eggs =
    node.ext.ldap[test]
    pas.plugins.ldap[test]
environment = testenv
defaults = ['--auto-color', '--auto-progress']

[zopeomelette]
recipe = collective.recipe.omelette
eggs = 
    ${instance:eggs}
ignore-develop = true

[ploneomelette]
recipe = collective.recipe.omelette
eggs = 
    ${plone:eggs}
ignore-develop = true

[coverage]
recipe = zc.recipe.testrunner
eggs = ${test:eggs}
defaults = ['--coverage', '../../coverage', '-v', '--auto-progress']
environment = testenv
