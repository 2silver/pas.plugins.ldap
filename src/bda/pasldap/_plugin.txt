Test of the plugin
==================

Basics
------

::
    >>> app = layer['app']
    >>> z2.login(app.acl_users, 'admin')
  
Turn into a PAS user folder::

    >>> from Products.PlonePAS.Extensions.Install import migrate_root_uf
    
Create 
------

::
    >>> interact(locals())     

pas.plugins.listPluginTypeInfo()

the remaining ones we are not yet using and don't see yet why we should

 {'description': 'Group Introspection provides listings of groups and membership',
  'id': 'IGroupIntrospection',
  'interface': <InterfaceClass Products.PlonePAS.interfaces.group.IGroupIntrospection>,
  'methods': ['getGroupById', 'getGroupIds', 'getGroups', 'getGroupMembers'],
  'title': 'group_introspection'},
 {'description': "Update plugins allow the user or the application to update the user's properties.",
  'id': 'IUpdatePlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IUpdatePlugin>,
  'methods': ['updateUserInfo'],
  'title': 'update'},
 {'description': 'The User Introspection plugins allow the Pluggable Auth Service to provide lists of users',
  'id': 'IUserIntrospection',
  'interface': <InterfaceClass Products.PlonePAS.interfaces.plugins.IUserIntrospection>,
  'methods': ['getUserNames', 'getUserIds', 'getUsers'],
  'title': 'user_introspection'},

maybe
 {'description': 'Roles plugins determine the global roles which a user has.',
  'id': 'IRolesPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IRolesPlugin>,
  'methods': ['getRolesForPrincipal'],
  'title': 'roles'},
 {'description': 'Create users.',
  'id': 'IUserFactoryPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IUserFactoryPlugin>,
  'methods': ['createUser'],
  'title': 'userfactory'},
 {'description': 'Credential clear plugins respond to a user logging out.',
  'id': 'ICredentialsResetPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.ICredentialsResetPlugin>,
  'methods': ['resetCredentials'],
  'title': 'reset credentials'},
 {'description': 'Credential update plugins respond to the user changing credentials.',
  'id': 'ICredentialsUpdatePlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.ICredentialsUpdatePlugin>,
  'methods': ['updateCredentials'],
  'title': 'update credentials'},
 {'description': 'Validation plugins specify allowable values for user properties (e.g., minimum password length, allowed characters, etc.)',
  'id': 'IValidationPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IValidationPlugin>,
  'methods': ['validateUserInfo'],
  'title': 'validation'}]



