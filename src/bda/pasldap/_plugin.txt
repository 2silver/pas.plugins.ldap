pas.plugins.listPluginTypeInfo() relevent for us

 {'description': 'Authentication plugins are responsible for validating credentials generated by the Extraction Plugin.',
  'id': 'IAuthenticationPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IAuthenticationPlugin>,
  'methods': ['authenticateCredentials'],
  'title': 'authentication'},

 {'description': 'Enumeration plugins allow querying groups by ID.',
  'id': 'IGroupEnumerationPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IGroupEnumerationPlugin>,
  'methods': ['enumerateGroups'],
  'title': 'group_enumeration'},

 {'description': 'Group Introspection provides listings of groups and membership',
  'id': 'IGroupIntrospection',
  'interface': <InterfaceClass Products.PlonePAS.interfaces.group.IGroupIntrospection>,
  'methods': ['getGroupById', 'getGroupIds', 'getGroups', 'getGroupMembers'],
  'title': 'group_introspection'},
 {'description': 'Group Management provides add/write/deletion of groups and member management',
  'id': 'IGroupManagement',
  'interface': <InterfaceClass Products.PlonePAS.interfaces.group.IGroupManagement>,
  'methods': ['removePrincipalFromGroup',
              'addPrincipalToGroup',
              'removeGroup',
              'updateGroup',
              'setRolesForGroup',
              'addGroup'],
  'title': 'group_management'},
 {'description': 'Groups plugins determine the groups to which a user belongs.',
  'id': 'IGroupsPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IGroupsPlugin>,
  'methods': ['getGroupsForPrincipal'],
  'title': 'groups'},
 {'description': 'Properties plugins generate property sheets for users.',
  'id': 'IPropertiesPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IPropertiesPlugin>,
  'methods': ['getPropertiesForUser'],
  'title': 'properties'},
 {'description': "Update plugins allow the user or the application to update the user's properties.",
  'id': 'IUpdatePlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IUpdatePlugin>,
  'methods': ['updateUserInfo'],
  'title': 'update'},
 {'description': 'User Adder plugins allow the Pluggable Auth Service to create users.',
  'id': 'IUserAdderPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IUserAdderPlugin>,
  'methods': ['doAddUser'],
  'title': 'user_adder'},
 {'description': 'Enumeration plugins allow querying users by ID, and searching for users who match particular criteria.',
  'id': 'IUserEnumerationPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IUserEnumerationPlugin>,
  'methods': ['enumerateUsers'],
  'title': 'user_enumeration'},
 {'description': 'The User Introspection plugins allow the Pluggable Auth Service to provide lists of users',
  'id': 'IUserIntrospection',
  'interface': <InterfaceClass Products.PlonePAS.interfaces.plugins.IUserIntrospection>,
  'methods': ['getUserNames', 'getUserIds', 'getUsers'],
  'title': 'user_introspection'},
 {'description': 'The User Management plugins allow the Pluggable Auth Service to add/delete/modify users',
  'id': 'IUserManagement',
  'interface': <InterfaceClass Products.PlonePAS.interfaces.plugins.IUserManagement>,
  'methods': ['doChangeUser', 'doDeleteUser'],
  'title': 'user_management'},

maybe
 {'description': 'Roles plugins determine the global roles which a user has.',
  'id': 'IRolesPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IRolesPlugin>,
  'methods': ['getRolesForPrincipal'],
  'title': 'roles'},
 {'description': 'Create users.',
  'id': 'IUserFactoryPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IUserFactoryPlugin>,
  'methods': ['createUser'],
  'title': 'userfactory'},
 {'description': 'Credential clear plugins respond to a user logging out.',
  'id': 'ICredentialsResetPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.ICredentialsResetPlugin>,
  'methods': ['resetCredentials'],
  'title': 'reset credentials'},
 {'description': 'Credential update plugins respond to the user changing credentials.',
  'id': 'ICredentialsUpdatePlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.ICredentialsUpdatePlugin>,
  'methods': ['updateCredentials'],
  'title': 'update credentials'},
 {'description': 'Validation plugins specify allowable values for user properties (e.g., minimum password length, allowed characters, etc.)',
  'id': 'IValidationPlugin',
  'interface': <InterfaceClass Products.PluggableAuthService.interfaces.plugins.IValidationPlugin>,
  'methods': ['validateUserInfo'],
  'title': 'validation'}]



